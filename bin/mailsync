#!/usr/bin/env sh
# Sync mail and give notification if there is new mail.

export PATH=$PATH:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
export DISPLAY=${DISPLAY:=:0.0}

# Run only if not already running in other instance
pgrep -x mbsync >/dev/null && { echo "mbsync is already running." ; exit ;}

# Checks for internet connection and set notification script.
ping -q -c 1 1.1.1.1 > /dev/null || { echo "No internet connection detected."; exit ;}

# Settings are different for MacOS (Darwin) systems.
notify() { notify-send "mutt-wizard" "$2 new mail(s) in \`$1\` account." ;}

# Check account for new mail. Notify if there is new content.
syncandnotify() {
    acc="$(echo "$account" | sed "s/.*\///")"
    mbsync "$acc"
    new=$(find "$HOME/.local/share/mail/$acc/INBOX/new/" "$HOME/.local/share/mail/$acc/Inbox/new/" "$HOME/.local/share/mail/$acc/inbox/new/" -type f -newer "$HOME/.config/mutt/.mailsynclastrun" 2> /dev/null)
    newcount=$(echo "$new" | sed '/^\s*$/d' | wc -l)
    [ "$newcount" -gt "0" ] && notify "$acc" "$newcount"
}

# Sync accounts passed as argument or all.
accounts="${*:-$(grep '^Channel' "$HOME/.mbsyncrc" | cut -d' ' -f2)}"

# Parallelize multiple accounts
for account in $accounts ; do syncandnotify & done ; wait
notmuch new 2>/dev/null

#Create a touch file that indicates the time of the last run of mailsync
touch "$HOME/.config/mutt/.mailsynclastrun"
